h1 Admin Portal

- if @posts.present?
  .container-fluid
    .card.h-100
      .card_content
        =form_with(url: admin_posts_path, method: "GET",
        data: { turbo_frame: "data-table", controller: "table", action: "input->table#submitFilter" }) do |f|
          =f.hidden_field :order_by, data: { "order-by": "order-by" }
          .row.gx-4.align-items-center.mb-4
            .col-lg
              .row.gx-4
                .col-6.col-lg-4
                  .field-group.mb-0
                    .field-container
                      =f.text_field :title, class: "search-input field", autocomplete: "off", placeholder: 'Title', value: params[:title]
                      .svg-icon
                .col-6.col-lg-4
                  .field-group.mb-0
                    .field-container
                      =f.select(:active, options_for_select([['Active', true], ['Inactive', false]], params[:active]), {include_blank: 'All Statuses'}, id:"active", class:"field field--select js-filter-select")
                .col-6.col-lg-4
                      .field-group.mb-0
                        .field-container
                          =f.select(:featured, options_for_select([['Featured', true], ['Not Featured', false]], params[:featured]), {include_blank: 'All Posts'}, id:"featured", class:"field field--select js-filter-select")
                .col-lg-4
                  .field-group.mb-0
                    .field-container
                      select.js-filter-select.field.field--select name="count_per_page"
                        option selected=('selected' if params[:count_per_page] == '10') value="10" Show 10
                        option selected=('selected' if params[:count_per_page] == '25') value="25" Show 25
                        option selected=('selected' if params[:count_per_page] == '50') value="50" Show 50     

  = turbo_frame_tag "data-table" do
    == pagy_info(@pagy)
    == pagy_bootstrap_nav(@pagy)
    .table-responsive
      table.table
        .thead-dark
          tr
            - sort_columns = {"ID" => "id",
                              "Author" => "customer_id",
                              "Title" => "title",
                              "Content" => "content",
                              "Publication Date" => "publication_date"}
            - sort_columns.each do |label, column|
              - sort_direction = (params[:order_by] == "#{column}_asc") ? "desc": "asc"
              th
                = link_to label, admin_posts_path(order_by: "#{column}_#{sort_direction}"), data: { turbo_frame: "data-table" }

            - if user_signed_in?
              th Status

        tbody.table-group-divider
          - @posts.each do |post|
            = render "admin/posts/post_table_rows", post: post
- else
  p No posts available